{"version":3,"file":"ggvega.js","sources":["../js/Mark.js","../js/Encoding.js","../js/vlSpec.js","../js/LayerSpec.js","../js/compile.js"],"sourcesContent":["export function TranslatePointShape(ggShape) {\n    var shape = '';\n    if (ggShape % 8 == 0) {\n        shape = 'circle';\n    }\n    if (ggShape % 8 == 1) {\n        shape = 'square';\n    }\n    if (ggShape % 8 == 2) {\n        shape = 'cross';\n    }\n    if (ggShape % 8 == 3) {\n        shape = 'diamond';\n    }\n    if (ggShape % 8 == 4) {\n        shape = 'triangle-up';\n    }\n    if (ggShape % 8 == 5) {\n        shape = 'triangle-down';\n    }\n    if (ggShape % 8 == 6) {\n        shape = 'triangle-right';\n    }\n    if (ggShape % 8 == 7) {\n        shape = 'triangle-left';\n    }\n    return shape;\n}\nexport function TranslateStroke(ggStroke) {\n    return ggStroke;\n}\nexport function TranslateStrokeWidth(ggStrokeWidth) {\n    return ggStrokeWidth;\n}\nexport function TranslateOpacity(ggOpacity) {\n    return ggOpacity;\n}\nexport function TranslateFill(ggFill) {\n    return ggFill;\n}\nexport function TranslatePointSize(ggSize) {\n    return ggSize * 20;\n}\n","import * as Mark from './Mark';\nexport function TranslateEncoding(layer, labels, layerData, scales) {\n    var layerEncoding = {\n        x: TranslateXClass(layer, labels, layerData, scales),\n        y: TranslateYClass(layer, labels, layerData, scales),\n        // color: TranslateColor(layer, labels, layerData),\n        size: TranslateSize(layer, labels, layerData),\n        shape: TranslateShape(layer, labels, layerData),\n        stroke: TranslateStroke(layer, labels, layerData),\n        strokeWidth: TranslateStrokeWidth(layer, labels, layerData),\n        opacity: TranslateOpacity(layer, labels, layerData),\n        fill: TranslateFill(layer, labels, layerData)\n    };\n    return layerEncoding;\n}\nfunction TranslateXClass(layer, labels, layerData, scales) {\n    var field = layer['mapping']['x']['field'];\n    var type = layerData['metadata'][field]['type'];\n    var scale;\n    var title = labels['x'];\n    for (var _i = 0, scales_1 = scales; _i < scales_1.length; _i++) {\n        var ggScale = scales_1[_i];\n        if (ggScale['aesthetics'][0] == 'x') {\n            scale = TranslateScale(ggScale['transform']);\n            if (ggScale['name']) {\n                title = ggScale['name'];\n            }\n        }\n    }\n    field = field.replace('.', '\\\\.');\n    var xClass = {\n        field: field,\n        type: type,\n        title: title,\n        scale: scale\n    };\n    return xClass;\n}\nfunction TranslateYClass(layer, labels, layerData, scales) {\n    var field = layer['mapping']['y']['field'];\n    var type = layerData['metadata'][field]['type'];\n    var scale;\n    var title = labels['y'];\n    for (var _i = 0, scales_2 = scales; _i < scales_2.length; _i++) {\n        var ggScale = scales_2[_i];\n        if (ggScale['aesthetics'][0] == 'y') {\n            scale = TranslateScale(ggScale['transform']);\n            if (ggScale['name']) {\n                title = ggScale['name'];\n            }\n        }\n    }\n    field = field.replace('.', '\\\\.');\n    var yClass = {\n        field: field,\n        type: type,\n        title: title,\n        scale: scale\n    };\n    return yClass;\n}\n/**\n * This function used tp translate `color`.\n * For now, we believe we can use `fill` and `stroke` substitute `color`. So we just comment this function\n * @param layer\n * @param ggSpec\n */\n// function TranslateColor(layer: any, labels: any, layerData: any): vlspec.ValueDefWithConditionMarkPropFieldDefStringNull | undefined {\n//   let color: vlspec.ValueDefWithConditionMarkPropFieldDefStringNull | undefined;\n//   if (layer['aes_params']['colour']) {\n//     color = layer['aes_params']['colour'];\n//   }\n//   if (layer['mapping']['colour']) {\n//     if (!layer['mapping']['colour']['field']) {\n//       return color;\n//     }\n//     let field: string = layer['mapping']['colour']['field'];\n//     const type: vlspec.StandardType = layerData['metadata'][field]['type'];\n//     field = field.replace('.', '\\\\.');\n//     color = {\n//       field: field,\n//       type: type,\n//       title: labels['colour']\n//     };\n//   }\n//   return color;\n// }\n/**\n * TODO:// default type is ordinal bin\n * translate encoding.size\n * @param layer in ggSpec['layers']\n * @param ggSpec is the ggSpec\n */\nfunction TranslateSize(layer, labels, layerData) {\n    var size;\n    if (layer['aes_params']) {\n        if (layer['aes_params']['size']) {\n            if (layer['aes_params']['size']['value']) {\n                size = {\n                    value: Mark.TranslatePointSize(layer['aes_params']['size']['value'])\n                };\n            }\n        }\n    }\n    if (layer['mapping']['size']) {\n        if (!layer['mapping']['size']['field']) {\n            return size;\n        }\n        var field = layer['mapping']['size']['field'];\n        var type = layerData['metadata'][field]['type'];\n        field = field.replace('.', '\\\\.');\n        size = {\n            field: field,\n            type: type,\n            title: labels['size'],\n            bin: true\n        };\n    }\n    return size;\n}\nfunction TranslateShape(layer, labels, layerData) {\n    var shape;\n    if (layer['aes_params']) {\n        if (layer['aes_params']['shape']) {\n            if (layer['aes_params']['shape']['value']) {\n                if (layer[\"geom\"]['class'] == 'GeomPoint') {\n                    shape = {\n                        value: Mark.TranslatePointShape(layer['aes_params']['shape']['value'])\n                    };\n                }\n            }\n        }\n    }\n    if (layer['mapping']['shape']) {\n        if (!layer['mapping']['shape']['field']) {\n            return shape;\n        }\n        var field = layer['mapping']['shape']['field'];\n        var type = layerData['metadata'][field]['type'];\n        field = field.replace('.', '\\\\.');\n        shape = {\n            field: field,\n            type: type,\n            title: labels['shape']\n        };\n    }\n    return shape;\n}\nfunction TranslateScale(transform) {\n    return transform;\n}\nfunction TranslateStroke(layer, labels, layerData) {\n    var stroke;\n    if (layer['aes_params']) {\n        if (layer['aes_params']['colour']) {\n            if (layer['aes_params']['colour']['value']) {\n                stroke = {\n                    value: Mark.TranslateStroke(layer['aes_params']['colour']['value'])\n                };\n            }\n        }\n    }\n    if (layer['mapping']['colour']) {\n        if (!layer['mapping']['colour']['field']) {\n            return stroke;\n        }\n        var field = layer['mapping']['colour']['field'];\n        var type = layerData['metadata'][field]['type'];\n        field = field.replace('.', '\\\\.');\n        stroke = {\n            field: field,\n            type: type,\n            title: labels['colour']\n        };\n    }\n    return stroke;\n}\nfunction TranslateStrokeWidth(layer, labels, layerData) {\n    var strokeWidth;\n    if (layer['aes_params']) {\n        if (layer['aes_params']['stroke']) {\n            if (layer['aes_params']['stroke']['value']) {\n                strokeWidth = {\n                    value: Mark.TranslateStrokeWidth(layer['aes_params']['stroke']['value'])\n                };\n            }\n        }\n    }\n    if (layer['mapping']['stroke']) {\n        if (!layer['mapping']['stroke']['field']) {\n            return strokeWidth;\n        }\n        var field = layer['mapping']['stroke']['field'];\n        var type = layerData['metadata'][field]['type'];\n        field = field.replace('.', '\\\\.');\n        strokeWidth = {\n            field: field,\n            type: type,\n            title: labels['stroke']\n        };\n    }\n    return strokeWidth;\n}\nfunction TranslateOpacity(layer, labels, layerData) {\n    var opacity;\n    if (layer['aes_params']) {\n        if (layer['aes_params']['alpha']) {\n            if (layer['aes_params']['alpha']['value']) {\n                opacity = {\n                    value: Mark.TranslateOpacity(layer['aes_params']['alpha']['value'])\n                };\n            }\n        }\n    }\n    if (layer['mapping']['alpha']) {\n        if (!layer['mapping']['alpha']['field']) {\n            return opacity;\n        }\n        var field = layer['mapping']['alpha']['field'];\n        var type = layerData['metadata'][field]['type'];\n        field = field.replace('.', '\\\\.');\n        opacity = {\n            field: field,\n            type: type,\n            title: labels['stroke']\n        };\n    }\n    return opacity;\n}\nexport function TranslateFill(layer, labels, layerData) {\n    var fill;\n    if (layer['aes_params']) {\n        if (layer['aes_params']['fill']) {\n            if (layer['aes_params']['fill']['value']) {\n                fill = {\n                    value: Mark.TranslateFill(layer['aes_params']['fill']['value'])\n                };\n            }\n        }\n    }\n    if (layer['mapping']['fill']) {\n        if (!layer['mapping']['fill']['field']) {\n            return fill;\n        }\n        var field = layer['mapping']['fill']['field'];\n        var type = layerData['metadata'][field]['type'];\n        field = field.replace('.', '\\\\.');\n        fill = {\n            field: field,\n            type: type,\n            title: labels['colour']\n        };\n    }\n    return fill;\n}\n","/**\n * The alignment to apply to symbol legends rows and columns. The supported string values\n * are `\"all\"`, `\"each\"` (the default), and `none`. For more information, see the [grid\n * layout documentation](https://vega.github.io/vega/docs/layout).\n *\n * __Default value:__ `\"each\"`.\n */\nexport var LayoutAlign;\n(function (LayoutAlign) {\n    LayoutAlign[\"All\"] = \"all\";\n    LayoutAlign[\"Each\"] = \"each\";\n    LayoutAlign[\"None\"] = \"none\";\n})(LayoutAlign || (LayoutAlign = {}));\n/**\n * Determines how size calculation should be performed, one of `\"content\"` or `\"padding\"`.\n * The default setting (`\"content\"`) interprets the width and height settings as the data\n * rectangle (plotting) dimensions, to which padding is then added. In contrast, the\n * `\"padding\"` setting includes the padding within the view size calculations, such that the\n * width and height settings indicate the **total** intended size of the view.\n *\n * __Default value__: `\"content\"`\n */\nexport var Contains;\n(function (Contains) {\n    Contains[\"Content\"] = \"content\";\n    Contains[\"Padding\"] = \"padding\";\n})(Contains || (Contains = {}));\n/**\n * The sizing format type. One of `\"pad\"`, `\"fit\"` or `\"none\"`. See the [autosize\n * type](https://vega.github.io/vega-lite/docs/size.html#autosize) documentation for\n * descriptions of each.\n *\n * __Default value__: `\"pad\"`\n */\nexport var AutosizeType;\n(function (AutosizeType) {\n    AutosizeType[\"Fit\"] = \"fit\";\n    AutosizeType[\"None\"] = \"none\";\n    AutosizeType[\"Pad\"] = \"pad\";\n})(AutosizeType || (AutosizeType = {}));\n/**\n * The bounds calculation method to use for determining the extent of a sub-plot. One of\n * `full` (the default) or `flush`.\n *\n * - If set to `full`, the entire calculated bounds (including axes, title, and legend) will\n * be used.\n * - If set to `flush`, only the specified width and height values for the sub-view will be\n * used. The `flush` setting can be useful when attempting to place sub-plots without axes\n * or legends into a uniform grid structure.\n *\n * __Default value:__ `\"full\"`\n */\nexport var BoundsEnum;\n(function (BoundsEnum) {\n    BoundsEnum[\"Flush\"] = \"flush\";\n    BoundsEnum[\"Full\"] = \"full\";\n})(BoundsEnum || (BoundsEnum = {}));\n/**\n * Type of input data: `\"json\"`, `\"csv\"`, `\"tsv\"`, `\"dsv\"`.\n *\n * __Default value:__  The default format type is determined by the extension of the file\n * URL.\n * If no extension is detected, `\"json\"` will be used by default.\n */\nexport var DataFormatType;\n(function (DataFormatType) {\n    DataFormatType[\"CSV\"] = \"csv\";\n    DataFormatType[\"Dsv\"] = \"dsv\";\n    DataFormatType[\"JSON\"] = \"json\";\n    DataFormatType[\"Topojson\"] = \"topojson\";\n    DataFormatType[\"Tsv\"] = \"tsv\";\n})(DataFormatType || (DataFormatType = {}));\n/**\n * An [aggregate operation](https://vega.github.io/vega-lite/docs/aggregate.html#ops) to\n * perform on the field prior to sorting (e.g., `\"count\"`, `\"mean\"` and `\"median\"`).\n * An aggregation is required when there are multiple values of the sort field for each\n * encoded data field.\n * The input data objects will be aggregated, grouped by the encoded data field.\n *\n * For a full list of operations, please see the documentation for\n * [aggregate](https://vega.github.io/vega-lite/docs/aggregate.html#ops).\n *\n * __Default value:__ `\"sum\"` for stacked plots. Otherwise, `\"mean\"`.\n *\n * The aggregation operation to apply to the fields (e.g., sum, average or count).\n * See the [full list of supported aggregation\n * operations](https://vega.github.io/vega-lite/docs/aggregate.html#ops)\n * for more information.\n *\n * The aggregation operation to apply (e.g., sum, average or count). See the list of all\n * supported operations [here](https://vega.github.io/vega-lite/docs/aggregate.html#ops).\n */\nexport var AggregateOp;\n(function (AggregateOp) {\n    AggregateOp[\"Argmax\"] = \"argmax\";\n    AggregateOp[\"Argmin\"] = \"argmin\";\n    AggregateOp[\"Average\"] = \"average\";\n    AggregateOp[\"Ci0\"] = \"ci0\";\n    AggregateOp[\"Ci1\"] = \"ci1\";\n    AggregateOp[\"Count\"] = \"count\";\n    AggregateOp[\"Distinct\"] = \"distinct\";\n    AggregateOp[\"Max\"] = \"max\";\n    AggregateOp[\"Mean\"] = \"mean\";\n    AggregateOp[\"Median\"] = \"median\";\n    AggregateOp[\"Min\"] = \"min\";\n    AggregateOp[\"Missing\"] = \"missing\";\n    AggregateOp[\"Q1\"] = \"q1\";\n    AggregateOp[\"Q3\"] = \"q3\";\n    AggregateOp[\"Stderr\"] = \"stderr\";\n    AggregateOp[\"Stdev\"] = \"stdev\";\n    AggregateOp[\"Stdevp\"] = \"stdevp\";\n    AggregateOp[\"Sum\"] = \"sum\";\n    AggregateOp[\"Valid\"] = \"valid\";\n    AggregateOp[\"Values\"] = \"values\";\n    AggregateOp[\"Variance\"] = \"variance\";\n    AggregateOp[\"Variancep\"] = \"variancep\";\n})(AggregateOp || (AggregateOp = {}));\n/**\n * Time unit for the field to be filtered.\n *\n * Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\n * or [a temporal field that gets casted as\n * ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n *\n * __Default value:__ `undefined` (None)\n *\n * The timeUnit.\n */\nexport var TimeUnit;\n(function (TimeUnit) {\n    TimeUnit[\"Date\"] = \"date\";\n    TimeUnit[\"Day\"] = \"day\";\n    TimeUnit[\"Hours\"] = \"hours\";\n    TimeUnit[\"Hoursminutes\"] = \"hoursminutes\";\n    TimeUnit[\"Hoursminutesseconds\"] = \"hoursminutesseconds\";\n    TimeUnit[\"Milliseconds\"] = \"milliseconds\";\n    TimeUnit[\"Minutes\"] = \"minutes\";\n    TimeUnit[\"Minutesseconds\"] = \"minutesseconds\";\n    TimeUnit[\"Month\"] = \"month\";\n    TimeUnit[\"Monthdate\"] = \"monthdate\";\n    TimeUnit[\"Monthdatehours\"] = \"monthdatehours\";\n    TimeUnit[\"Quarter\"] = \"quarter\";\n    TimeUnit[\"Quartermonth\"] = \"quartermonth\";\n    TimeUnit[\"Seconds\"] = \"seconds\";\n    TimeUnit[\"Secondsmilliseconds\"] = \"secondsmilliseconds\";\n    TimeUnit[\"Utcdate\"] = \"utcdate\";\n    TimeUnit[\"Utcday\"] = \"utcday\";\n    TimeUnit[\"Utchours\"] = \"utchours\";\n    TimeUnit[\"Utchoursminutes\"] = \"utchoursminutes\";\n    TimeUnit[\"Utchoursminutesseconds\"] = \"utchoursminutesseconds\";\n    TimeUnit[\"Utcmilliseconds\"] = \"utcmilliseconds\";\n    TimeUnit[\"Utcminutes\"] = \"utcminutes\";\n    TimeUnit[\"Utcminutesseconds\"] = \"utcminutesseconds\";\n    TimeUnit[\"Utcmonth\"] = \"utcmonth\";\n    TimeUnit[\"Utcmonthdate\"] = \"utcmonthdate\";\n    TimeUnit[\"Utcmonthdatehours\"] = \"utcmonthdatehours\";\n    TimeUnit[\"Utcquarter\"] = \"utcquarter\";\n    TimeUnit[\"Utcquartermonth\"] = \"utcquartermonth\";\n    TimeUnit[\"Utcseconds\"] = \"utcseconds\";\n    TimeUnit[\"Utcsecondsmilliseconds\"] = \"utcsecondsmilliseconds\";\n    TimeUnit[\"Utcyear\"] = \"utcyear\";\n    TimeUnit[\"Utcyearmonth\"] = \"utcyearmonth\";\n    TimeUnit[\"Utcyearmonthdate\"] = \"utcyearmonthdate\";\n    TimeUnit[\"Utcyearmonthdatehours\"] = \"utcyearmonthdatehours\";\n    TimeUnit[\"Utcyearmonthdatehoursminutes\"] = \"utcyearmonthdatehoursminutes\";\n    TimeUnit[\"Utcyearmonthdatehoursminutesseconds\"] = \"utcyearmonthdatehoursminutesseconds\";\n    TimeUnit[\"Utcyearquarter\"] = \"utcyearquarter\";\n    TimeUnit[\"Utcyearquartermonth\"] = \"utcyearquartermonth\";\n    TimeUnit[\"Year\"] = \"year\";\n    TimeUnit[\"Yearmonth\"] = \"yearmonth\";\n    TimeUnit[\"Yearmonthdate\"] = \"yearmonthdate\";\n    TimeUnit[\"Yearmonthdatehours\"] = \"yearmonthdatehours\";\n    TimeUnit[\"Yearmonthdatehoursminutes\"] = \"yearmonthdatehoursminutes\";\n    TimeUnit[\"Yearmonthdatehoursminutesseconds\"] = \"yearmonthdatehoursminutesseconds\";\n    TimeUnit[\"Yearquarter\"] = \"yearquarter\";\n    TimeUnit[\"Yearquartermonth\"] = \"yearquartermonth\";\n})(TimeUnit || (TimeUnit = {}));\nexport var RepeatEnum;\n(function (RepeatEnum) {\n    RepeatEnum[\"Column\"] = \"column\";\n    RepeatEnum[\"Repeat\"] = \"repeat\";\n    RepeatEnum[\"Row\"] = \"row\";\n})(RepeatEnum || (RepeatEnum = {}));\n/**\n * The orientation of a non-stacked bar, tick, area, and line charts.\n * The value is either horizontal (default) or vertical.\n * - For bar, rule and tick, this determines whether the size of the bar and tick\n * should be applied to x or y dimension.\n * - For area, this property determines the orient property of the Vega output.\n * - For line and trail marks, this property determines the sort order of the points in the\n * line\n * if `config.sortLineBy` is not specified.\n * For stacked charts, this is always determined by the orientation of the stack;\n * therefore explicitly specified value will be ignored.\n *\n * The default direction (`\"horizontal\"` or `\"vertical\"`) for gradient legends.\n *\n * __Default value:__ `\"vertical\"`.\n *\n * The default direction (`\"horizontal\"` or `\"vertical\"`) for symbol legends.\n *\n * __Default value:__ `\"vertical\"`.\n *\n * The direction of the legend, one of `\"vertical\"` or `\"horizontal\"`.\n *\n * __Default value:__\n * - For top-/bottom-`orient`ed legends, `\"horizontal\"`\n * - For left-/right-`orient`ed legends, `\"vertical\"`\n * - For top/bottom-left/right-`orient`ed legends, `\"horizontal\"` for gradient legends and\n * `\"vertical\"` for symbol legends.\n *\n * Orientation of the box plot.  This is normally automatically determined based on types of\n * fields on x and y channels. However, an explicit `orient` be specified when the\n * orientation is ambiguous.\n *\n * __Default value:__ `\"vertical\"`.\n *\n * Orientation of the error bar.  This is normally automatically determined, but can be\n * specified when the orientation is ambiguous and cannot be automatically determined.\n *\n * Orientation of the error band. This is normally automatically determined, but can be\n * specified when the orientation is ambiguous and cannot be automatically determined.\n */\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"Horizontal\"] = \"horizontal\";\n    Orientation[\"Vertical\"] = \"vertical\";\n})(Orientation || (Orientation = {}));\n/**\n * The format type for labels (`\"number\"` or `\"time\"`).\n *\n * __Default value:__\n * - `\"time\"` for temporal fields and ordinal and nomimal fields with `timeUnit`.\n * - `\"number\"` for quantitative fields as well as ordinal and nomimal fields without\n * `timeUnit`.\n */\nexport var FormatType;\n(function (FormatType) {\n    FormatType[\"Number\"] = \"number\";\n    FormatType[\"Time\"] = \"time\";\n})(FormatType || (FormatType = {}));\n/**\n * The horizontal alignment of the text. One of `\"left\"`, `\"right\"`, `\"center\"`.\n *\n * Horizontal text alignment of axis tick labels, overriding the default setting for the\n * current axis orientation.\n *\n * Horizontal text alignment of axis titles.\n *\n * Horizontal text alignment of header labels.\n *\n * Horizontal text alignment (to the anchor) of header titles.\n *\n * The alignment of the legend label, can be left, center, or right.\n *\n * Horizontal text alignment for legend titles.\n *\n * __Default value:__ `\"left\"`.\n */\nexport var Align;\n(function (Align) {\n    Align[\"Center\"] = \"center\";\n    Align[\"Left\"] = \"left\";\n    Align[\"Right\"] = \"right\";\n})(Align || (Align = {}));\n/**\n * The vertical alignment of the text. One of `\"top\"`, `\"middle\"`, `\"bottom\"`.\n *\n * __Default value:__ `\"middle\"`\n *\n * Vertical text baseline of axis tick labels, overriding the default setting for the\n * current axis orientation. Can be `\"top\"`, `\"middle\"`, `\"bottom\"`, or `\"alphabetic\"`.\n *\n * Vertical text baseline for axis titles.\n *\n * Vertical text baseline for the header title. One of `\"top\"`, `\"bottom\"`, `\"middle\"`.\n *\n * __Default value:__ `\"middle\"`\n *\n * The position of the baseline of legend label, can be `\"top\"`, `\"middle\"`, `\"bottom\"`, or\n * `\"alphabetic\"`.\n *\n * __Default value:__ `\"middle\"`.\n *\n * Vertical text baseline for legend titles.\n *\n * __Default value:__ `\"top\"`.\n *\n * Vertical text baseline for title text. One of `\"top\"`, `\"middle\"`, `\"bottom\"`, or\n * `\"alphabetic\"`.\n */\nexport var TextBaseline;\n(function (TextBaseline) {\n    TextBaseline[\"Alphabetic\"] = \"alphabetic\";\n    TextBaseline[\"Bottom\"] = \"bottom\";\n    TextBaseline[\"Middle\"] = \"middle\";\n    TextBaseline[\"Top\"] = \"top\";\n})(TextBaseline || (TextBaseline = {}));\nexport var FontWeightEnum;\n(function (FontWeightEnum) {\n    FontWeightEnum[\"Bold\"] = \"bold\";\n    FontWeightEnum[\"Bolder\"] = \"bolder\";\n    FontWeightEnum[\"Lighter\"] = \"lighter\";\n    FontWeightEnum[\"Normal\"] = \"normal\";\n})(FontWeightEnum || (FontWeightEnum = {}));\nexport var LabelOverlapEnum;\n(function (LabelOverlapEnum) {\n    LabelOverlapEnum[\"Greedy\"] = \"greedy\";\n    LabelOverlapEnum[\"Parity\"] = \"parity\";\n})(LabelOverlapEnum || (LabelOverlapEnum = {}));\n/**\n * The orientation of the legend, which determines how the legend is positioned within the\n * scene. One of \"left\", \"right\", \"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\",\n * \"none\".\n *\n * __Default value:__ `\"right\"`\n *\n * The orientation of the legend, which determines how the legend is positioned within the\n * scene. One of `\"left\"`, `\"right\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom-left\"`,\n * `\"bottom-right\"`, `\"none\"`.\n *\n * __Default value:__ `\"right\"`\n */\nexport var LegendOrient;\n(function (LegendOrient) {\n    LegendOrient[\"Bottom\"] = \"bottom\";\n    LegendOrient[\"BottomLeft\"] = \"bottom-left\";\n    LegendOrient[\"BottomRight\"] = \"bottom-right\";\n    LegendOrient[\"Left\"] = \"left\";\n    LegendOrient[\"None\"] = \"none\";\n    LegendOrient[\"Right\"] = \"right\";\n    LegendOrient[\"Top\"] = \"top\";\n    LegendOrient[\"TopLeft\"] = \"top-left\";\n    LegendOrient[\"TopRight\"] = \"top-right\";\n})(LegendOrient || (LegendOrient = {}));\nexport var TitleAnchor;\n(function (TitleAnchor) {\n    TitleAnchor[\"End\"] = \"end\";\n    TitleAnchor[\"Middle\"] = \"middle\";\n    TitleAnchor[\"Start\"] = \"start\";\n})(TitleAnchor || (TitleAnchor = {}));\n/**\n * The orientation of the header label. One of `\"top\"`, `\"bottom\"`, `\"left\"` or `\"right\"`.\n *\n * The orientation of the header title. One of `\"top\"`, `\"bottom\"`, `\"left\"` or `\"right\"`.\n *\n * Orientation of the legend title.\n *\n * The orientation of the axis. One of `\"top\"`, `\"bottom\"`, `\"left\"` or `\"right\"`. The\n * orientation can be used to further specialize the axis type (e.g., a y-axis oriented\n * towards the right edge of the chart).\n *\n * __Default value:__ `\"bottom\"` for x-axes and `\"left\"` for y-axes.\n */\nexport var Orient;\n(function (Orient) {\n    Orient[\"Bottom\"] = \"bottom\";\n    Orient[\"Left\"] = \"left\";\n    Orient[\"Right\"] = \"right\";\n    Orient[\"Top\"] = \"top\";\n})(Orient || (Orient = {}));\n/**\n * The type of the legend. Use `\"symbol\"` to create a discrete legend and `\"gradient\"` for a\n * continuous color gradient.\n *\n * __Default value:__ `\"gradient\"` for non-binned quantitative fields and temporal fields;\n * `\"symbol\"` otherwise.\n */\nexport var LegendType;\n(function (LegendType) {\n    LegendType[\"Gradient\"] = \"gradient\";\n    LegendType[\"Symbol\"] = \"symbol\";\n})(LegendType || (LegendType = {}));\nexport var Domain;\n(function (Domain) {\n    Domain[\"Unaggregated\"] = \"unaggregated\";\n})(Domain || (Domain = {}));\nexport var ScaleInterpolateParamsType;\n(function (ScaleInterpolateParamsType) {\n    ScaleInterpolateParamsType[\"Cubehelix\"] = \"cubehelix\";\n    ScaleInterpolateParamsType[\"CubehelixLong\"] = \"cubehelix-long\";\n    ScaleInterpolateParamsType[\"RGB\"] = \"rgb\";\n})(ScaleInterpolateParamsType || (ScaleInterpolateParamsType = {}));\nexport var ScaleInterpolate;\n(function (ScaleInterpolate) {\n    ScaleInterpolate[\"Cubehelix\"] = \"cubehelix\";\n    ScaleInterpolate[\"CubehelixLong\"] = \"cubehelix-long\";\n    ScaleInterpolate[\"HCL\"] = \"hcl\";\n    ScaleInterpolate[\"HCLLong\"] = \"hcl-long\";\n    ScaleInterpolate[\"Hsl\"] = \"hsl\";\n    ScaleInterpolate[\"HslLong\"] = \"hsl-long\";\n    ScaleInterpolate[\"Lab\"] = \"lab\";\n    ScaleInterpolate[\"RGB\"] = \"rgb\";\n})(ScaleInterpolate || (ScaleInterpolate = {}));\nexport var NiceTime;\n(function (NiceTime) {\n    NiceTime[\"Day\"] = \"day\";\n    NiceTime[\"Hour\"] = \"hour\";\n    NiceTime[\"Minute\"] = \"minute\";\n    NiceTime[\"Month\"] = \"month\";\n    NiceTime[\"Second\"] = \"second\";\n    NiceTime[\"Week\"] = \"week\";\n    NiceTime[\"Year\"] = \"year\";\n})(NiceTime || (NiceTime = {}));\n/**\n * The type of scale.  Vega-Lite supports the following categories of scale types:\n *\n * 1) [**Continuous Scales**](https://vega.github.io/vega-lite/docs/scale.html#continuous)\n * -- mapping continuous domains to continuous output ranges\n * ([`\"linear\"`](https://vega.github.io/vega-lite/docs/scale.html#linear),\n * [`\"pow\"`](https://vega.github.io/vega-lite/docs/scale.html#pow),\n * [`\"sqrt\"`](https://vega.github.io/vega-lite/docs/scale.html#sqrt),\n * [`\"symlog\"`](https://vega.github.io/vega-lite/docs/scale.html#symlog),\n * [`\"log\"`](https://vega.github.io/vega-lite/docs/scale.html#log),\n * [`\"time\"`](https://vega.github.io/vega-lite/docs/scale.html#time),\n * [`\"utc\"`](https://vega.github.io/vega-lite/docs/scale.html#utc).\n *\n * 2) [**Discrete Scales**](https://vega.github.io/vega-lite/docs/scale.html#discrete) --\n * mapping discrete domains to discrete\n * ([`\"ordinal\"`](https://vega.github.io/vega-lite/docs/scale.html#ordinal)) or continuous\n * ([`\"band\"`](https://vega.github.io/vega-lite/docs/scale.html#band) and\n * [`\"point\"`](https://vega.github.io/vega-lite/docs/scale.html#point)) output ranges.\n *\n * 3) [**Discretizing\n * Scales**](https://vega.github.io/vega-lite/docs/scale.html#discretizing) -- mapping\n * continuous domains to discrete output ranges\n * [`\"bin-ordinal\"`](https://vega.github.io/vega-lite/docs/scale.html#bin-ordinal),\n * [`\"quantile\"`](https://vega.github.io/vega-lite/docs/scale.html#quantile),\n * [`\"quantize\"`](https://vega.github.io/vega-lite/docs/scale.html#quantize) and\n * [`\"threshold\"`](https://vega.github.io/vega-lite/docs/scale.html#threshold).\n *\n * __Default value:__ please see the [scale type\n * table](https://vega.github.io/vega-lite/docs/scale.html#type).\n */\nexport var ScaleType;\n(function (ScaleType) {\n    ScaleType[\"Band\"] = \"band\";\n    ScaleType[\"BinOrdinal\"] = \"bin-ordinal\";\n    ScaleType[\"Linear\"] = \"linear\";\n    ScaleType[\"Log\"] = \"log\";\n    ScaleType[\"Ordinal\"] = \"ordinal\";\n    ScaleType[\"Point\"] = \"point\";\n    ScaleType[\"Pow\"] = \"pow\";\n    ScaleType[\"Quantile\"] = \"quantile\";\n    ScaleType[\"Quantize\"] = \"quantize\";\n    ScaleType[\"Sqrt\"] = \"sqrt\";\n    ScaleType[\"Symlog\"] = \"symlog\";\n    ScaleType[\"Threshold\"] = \"threshold\";\n    ScaleType[\"Time\"] = \"time\";\n    ScaleType[\"UTC\"] = \"utc\";\n})(ScaleType || (ScaleType = {}));\n/**\n * The [encoding channel](https://vega.github.io/vega-lite/docs/encoding.html#channels) to\n * sort by (e.g., `\"x\"`, `\"y\"`)\n */\nexport var SingleDefUnitChannel;\n(function (SingleDefUnitChannel) {\n    SingleDefUnitChannel[\"Color\"] = \"color\";\n    SingleDefUnitChannel[\"Fill\"] = \"fill\";\n    SingleDefUnitChannel[\"FillOpacity\"] = \"fillOpacity\";\n    SingleDefUnitChannel[\"Href\"] = \"href\";\n    SingleDefUnitChannel[\"Key\"] = \"key\";\n    SingleDefUnitChannel[\"Latitude\"] = \"latitude\";\n    SingleDefUnitChannel[\"Latitude2\"] = \"latitude2\";\n    SingleDefUnitChannel[\"Longitude\"] = \"longitude\";\n    SingleDefUnitChannel[\"Longitude2\"] = \"longitude2\";\n    SingleDefUnitChannel[\"Opacity\"] = \"opacity\";\n    SingleDefUnitChannel[\"Shape\"] = \"shape\";\n    SingleDefUnitChannel[\"Size\"] = \"size\";\n    SingleDefUnitChannel[\"Stroke\"] = \"stroke\";\n    SingleDefUnitChannel[\"StrokeOpacity\"] = \"strokeOpacity\";\n    SingleDefUnitChannel[\"StrokeWidth\"] = \"strokeWidth\";\n    SingleDefUnitChannel[\"Text\"] = \"text\";\n    SingleDefUnitChannel[\"Tooltip\"] = \"tooltip\";\n    SingleDefUnitChannel[\"X\"] = \"x\";\n    SingleDefUnitChannel[\"X2\"] = \"x2\";\n    SingleDefUnitChannel[\"Y\"] = \"y\";\n    SingleDefUnitChannel[\"Y2\"] = \"y2\";\n})(SingleDefUnitChannel || (SingleDefUnitChannel = {}));\n/**\n * The sort order. One of `\"ascending\"` (default) or `\"descending\"`.\n */\nexport var SortOrder;\n(function (SortOrder) {\n    SortOrder[\"Ascending\"] = \"ascending\";\n    SortOrder[\"Descending\"] = \"descending\";\n})(SortOrder || (SortOrder = {}));\n/**\n * The encoded field's type of measurement (`\"quantitative\"`, `\"temporal\"`, `\"ordinal\"`, or\n * `\"nominal\"`).\n * It can also be a `\"geojson\"` type for encoding\n * ['geoshape'](https://vega.github.io/vega-lite/docs/geoshape.html).\n *\n *\n * __Note:__\n *\n * - Data values for a temporal field can be either a date-time string (e.g., `\"2015-03-07\n * 12:32:17\"`, `\"17:01\"`, `\"2015-03-16\"`. `\"2015\"`) or a timestamp number (e.g.,\n * `1552199579097`).\n * - Data `type` describes the semantics of the data rather than the primitive data types\n * (`number`, `string`, etc.). The same primitive data type can have different types of\n * measurement. For example, numeric data can represent quantitative, ordinal, or nominal\n * data.\n * - When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type`\n * property can be either `\"quantitative\"` (for using a linear bin scale) or [`\"ordinal\"`\n * (for using an ordinal bin\n * scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n * - When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the\n * `type` property can be either `\"temporal\"` (for using a temporal scale) or [`\"ordinal\"`\n * (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n * - When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html),\n * the `type` property refers to the post-aggregation data type. For example, we can\n * calculate count `distinct` of a categorical field `\"cat\"` using `{\"aggregate\":\n * \"distinct\", \"field\": \"cat\", \"type\": \"quantitative\"}`. The `\"type\"` of the aggregate\n * output is `\"quantitative\"`.\n * - Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they\n * have exactly the same type as their primary channels (e.g., `x`, `y`).\n */\nexport var StandardType;\n(function (StandardType) {\n    StandardType[\"Nominal\"] = \"nominal\";\n    StandardType[\"Ordinal\"] = \"ordinal\";\n    StandardType[\"Quantitative\"] = \"quantitative\";\n    StandardType[\"Temporal\"] = \"temporal\";\n})(StandardType || (StandardType = {}));\nexport var BinEnum;\n(function (BinEnum) {\n    BinEnum[\"Binned\"] = \"binned\";\n})(BinEnum || (BinEnum = {}));\n/**\n * The encoded field's type of measurement (`\"quantitative\"`, `\"temporal\"`, `\"ordinal\"`, or\n * `\"nominal\"`).\n * It can also be a `\"geojson\"` type for encoding\n * ['geoshape'](https://vega.github.io/vega-lite/docs/geoshape.html).\n *\n *\n * __Note:__\n *\n * - Data values for a temporal field can be either a date-time string (e.g., `\"2015-03-07\n * 12:32:17\"`, `\"17:01\"`, `\"2015-03-16\"`. `\"2015\"`) or a timestamp number (e.g.,\n * `1552199579097`).\n * - Data `type` describes the semantics of the data rather than the primitive data types\n * (`number`, `string`, etc.). The same primitive data type can have different types of\n * measurement. For example, numeric data can represent quantitative, ordinal, or nominal\n * data.\n * - When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type`\n * property can be either `\"quantitative\"` (for using a linear bin scale) or [`\"ordinal\"`\n * (for using an ordinal bin\n * scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n * - When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the\n * `type` property can be either `\"temporal\"` (for using a temporal scale) or [`\"ordinal\"`\n * (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n * - When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html),\n * the `type` property refers to the post-aggregation data type. For example, we can\n * calculate count `distinct` of a categorical field `\"cat\"` using `{\"aggregate\":\n * \"distinct\", \"field\": \"cat\", \"type\": \"quantitative\"}`. The `\"type\"` of the aggregate\n * output is `\"quantitative\"`.\n * - Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they\n * have exactly the same type as their primary channels (e.g., `x`, `y`).\n */\nexport var LatitudeType;\n(function (LatitudeType) {\n    LatitudeType[\"Quantitative\"] = \"quantitative\";\n})(LatitudeType || (LatitudeType = {}));\n/**\n * The encoded field's type of measurement (`\"quantitative\"`, `\"temporal\"`, `\"ordinal\"`, or\n * `\"nominal\"`).\n * It can also be a `\"geojson\"` type for encoding\n * ['geoshape'](https://vega.github.io/vega-lite/docs/geoshape.html).\n *\n *\n * __Note:__\n *\n * - Data values for a temporal field can be either a date-time string (e.g., `\"2015-03-07\n * 12:32:17\"`, `\"17:01\"`, `\"2015-03-16\"`. `\"2015\"`) or a timestamp number (e.g.,\n * `1552199579097`).\n * - Data `type` describes the semantics of the data rather than the primitive data types\n * (`number`, `string`, etc.). The same primitive data type can have different types of\n * measurement. For example, numeric data can represent quantitative, ordinal, or nominal\n * data.\n * - When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type`\n * property can be either `\"quantitative\"` (for using a linear bin scale) or [`\"ordinal\"`\n * (for using an ordinal bin\n * scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n * - When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the\n * `type` property can be either `\"temporal\"` (for using a temporal scale) or [`\"ordinal\"`\n * (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n * - When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html),\n * the `type` property refers to the post-aggregation data type. For example, we can\n * calculate count `distinct` of a categorical field `\"cat\"` using `{\"aggregate\":\n * \"distinct\", \"field\": \"cat\", \"type\": \"quantitative\"}`. The `\"type\"` of the aggregate\n * output is `\"quantitative\"`.\n * - Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they\n * have exactly the same type as their primary channels (e.g., `x`, `y`).\n */\nexport var TypeForShape;\n(function (TypeForShape) {\n    TypeForShape[\"Geojson\"] = \"geojson\";\n    TypeForShape[\"Nominal\"] = \"nominal\";\n    TypeForShape[\"Ordinal\"] = \"ordinal\";\n})(TypeForShape || (TypeForShape = {}));\n/**\n * The imputation method to use for the field value of imputed data objects.\n * One of `value`, `mean`, `median`, `max` or `min`.\n *\n * __Default value:__  `\"value\"`\n */\nexport var ImputeMethod;\n(function (ImputeMethod) {\n    ImputeMethod[\"Max\"] = \"max\";\n    ImputeMethod[\"Mean\"] = \"mean\";\n    ImputeMethod[\"Median\"] = \"median\";\n    ImputeMethod[\"Min\"] = \"min\";\n    ImputeMethod[\"Value\"] = \"value\";\n})(ImputeMethod || (ImputeMethod = {}));\n/**\n * Default stack offset for stackable mark.\n *\n * Mode for stacking marks.\n * __Default value:__ `\"zero\"`\n */\nexport var StackOffset;\n(function (StackOffset) {\n    StackOffset[\"Center\"] = \"center\";\n    StackOffset[\"Normalize\"] = \"normalize\";\n    StackOffset[\"Zero\"] = \"zero\";\n})(StackOffset || (StackOffset = {}));\nexport var PurpleValue;\n(function (PurpleValue) {\n    PurpleValue[\"Width\"] = \"width\";\n})(PurpleValue || (PurpleValue = {}));\nexport var FluffyValue;\n(function (FluffyValue) {\n    FluffyValue[\"Height\"] = \"height\";\n})(FluffyValue || (FluffyValue = {}));\n/**\n * The mouse cursor used over the mark. Any valid [CSS cursor\n * type](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor#Values) can be used.\n */\nexport var Cursor;\n(function (Cursor) {\n    Cursor[\"Alias\"] = \"alias\";\n    Cursor[\"AllScroll\"] = \"all-scroll\";\n    Cursor[\"Auto\"] = \"auto\";\n    Cursor[\"Cell\"] = \"cell\";\n    Cursor[\"ColResize\"] = \"col-resize\";\n    Cursor[\"ContextMenu\"] = \"context-menu\";\n    Cursor[\"Copy\"] = \"copy\";\n    Cursor[\"Crosshair\"] = \"crosshair\";\n    Cursor[\"Default\"] = \"default\";\n    Cursor[\"EResize\"] = \"e-resize\";\n    Cursor[\"EwResize\"] = \"ew-resize\";\n    Cursor[\"Grab\"] = \"grab\";\n    Cursor[\"Grabbing\"] = \"grabbing\";\n    Cursor[\"Help\"] = \"help\";\n    Cursor[\"Move\"] = \"move\";\n    Cursor[\"NResize\"] = \"n-resize\";\n    Cursor[\"NSResize\"] = \"ns-resize\";\n    Cursor[\"NeResize\"] = \"ne-resize\";\n    Cursor[\"NeswResize\"] = \"nesw-resize\";\n    Cursor[\"NoDrop\"] = \"no-drop\";\n    Cursor[\"None\"] = \"none\";\n    Cursor[\"NotAllowed\"] = \"not-allowed\";\n    Cursor[\"NwResize\"] = \"nw-resize\";\n    Cursor[\"NwseResize\"] = \"nwse-resize\";\n    Cursor[\"Pointer\"] = \"pointer\";\n    Cursor[\"Progress\"] = \"progress\";\n    Cursor[\"RowResize\"] = \"row-resize\";\n    Cursor[\"SEResize\"] = \"se-resize\";\n    Cursor[\"SResize\"] = \"s-resize\";\n    Cursor[\"SwResize\"] = \"sw-resize\";\n    Cursor[\"Text\"] = \"text\";\n    Cursor[\"VerticalText\"] = \"vertical-text\";\n    Cursor[\"WResize\"] = \"w-resize\";\n    Cursor[\"Wait\"] = \"wait\";\n    Cursor[\"ZoomIn\"] = \"zoom-in\";\n    Cursor[\"ZoomOut\"] = \"zoom-out\";\n})(Cursor || (Cursor = {}));\n/**\n * The direction of the text. One of `\"ltr\"` (left-to-right) or `\"rtl\"` (right-to-left).\n * This property determines on which side is truncated in response to the limit parameter.\n *\n * __Default value:__ `\"ltr\"`\n */\nexport var Dir;\n(function (Dir) {\n    Dir[\"LTR\"] = \"ltr\";\n    Dir[\"RTL\"] = \"rtl\";\n})(Dir || (Dir = {}));\n/**\n * The line interpolation method to use for line and area marks. One of the following:\n * - `\"linear\"`: piecewise linear segments, as in a polyline.\n * - `\"linear-closed\"`: close the linear segments to form a polygon.\n * - `\"step\"`: alternate between horizontal and vertical segments, as in a step function.\n * - `\"step-before\"`: alternate between vertical and horizontal segments, as in a step\n * function.\n * - `\"step-after\"`: alternate between horizontal and vertical segments, as in a step\n * function.\n * - `\"basis\"`: a B-spline, with control point duplication on the ends.\n * - `\"basis-open\"`: an open B-spline; may not intersect the start or end.\n * - `\"basis-closed\"`: a closed B-spline, as in a loop.\n * - `\"cardinal\"`: a Cardinal spline, with control point duplication on the ends.\n * - `\"cardinal-open\"`: an open Cardinal spline; may not intersect the start or end, but\n * will intersect other control points.\n * - `\"cardinal-closed\"`: a closed Cardinal spline, as in a loop.\n * - `\"bundle\"`: equivalent to basis, except the tension parameter is used to straighten the\n * spline.\n * - `\"monotone\"`: cubic interpolation that preserves monotonicity in y.\n *\n * The line interpolation method for the error band. One of the following:\n * - `\"linear\"`: piecewise linear segments, as in a polyline.\n * - `\"linear-closed\"`: close the linear segments to form a polygon.\n * - `\"step\"`: a piecewise constant function (a step function) consisting of alternating\n * horizontal and vertical lines. The y-value changes at the midpoint of each pair of\n * adjacent x-values.\n * - `\"step-before\"`: a piecewise constant function (a step function) consisting of\n * alternating horizontal and vertical lines. The y-value changes before the x-value.\n * - `\"step-after\"`: a piecewise constant function (a step function) consisting of\n * alternating horizontal and vertical lines. The y-value changes after the x-value.\n * - `\"basis\"`: a B-spline, with control point duplication on the ends.\n * - `\"basis-open\"`: an open B-spline; may not intersect the start or end.\n * - `\"basis-closed\"`: a closed B-spline, as in a loop.\n * - `\"cardinal\"`: a Cardinal spline, with control point duplication on the ends.\n * - `\"cardinal-open\"`: an open Cardinal spline; may not intersect the start or end, but\n * will intersect other control points.\n * - `\"cardinal-closed\"`: a closed Cardinal spline, as in a loop.\n * - `\"bundle\"`: equivalent to basis, except the tension parameter is used to straighten the\n * spline.\n * - `\"monotone\"`: cubic interpolation that preserves monotonicity in y.\n */\nexport var Interpolate;\n(function (Interpolate) {\n    Interpolate[\"Basis\"] = \"basis\";\n    Interpolate[\"BasisClosed\"] = \"basis-closed\";\n    Interpolate[\"BasisOpen\"] = \"basis-open\";\n    Interpolate[\"Bundle\"] = \"bundle\";\n    Interpolate[\"Cardinal\"] = \"cardinal\";\n    Interpolate[\"CardinalClosed\"] = \"cardinal-closed\";\n    Interpolate[\"CardinalOpen\"] = \"cardinal-open\";\n    Interpolate[\"Linear\"] = \"linear\";\n    Interpolate[\"LinearClosed\"] = \"linear-closed\";\n    Interpolate[\"Monotone\"] = \"monotone\";\n    Interpolate[\"Step\"] = \"step\";\n    Interpolate[\"StepAfter\"] = \"step-after\";\n    Interpolate[\"StepBefore\"] = \"step-before\";\n})(Interpolate || (Interpolate = {}));\n/**\n * The stroke cap for line ending style. One of `\"butt\"`, `\"round\"`, or `\"square\"`.\n *\n * __Default value:__ `\"square\"`\n */\nexport var StrokeCap;\n(function (StrokeCap) {\n    StrokeCap[\"Butt\"] = \"butt\";\n    StrokeCap[\"Round\"] = \"round\";\n    StrokeCap[\"Square\"] = \"square\";\n})(StrokeCap || (StrokeCap = {}));\n/**\n * The stroke line join method. One of `\"miter\"`, `\"round\"` or `\"bevel\"`.\n *\n * __Default value:__ `\"miter\"`\n */\nexport var StrokeJoin;\n(function (StrokeJoin) {\n    StrokeJoin[\"Bevel\"] = \"bevel\";\n    StrokeJoin[\"Miter\"] = \"miter\";\n    StrokeJoin[\"Round\"] = \"round\";\n})(StrokeJoin || (StrokeJoin = {}));\nexport var Content;\n(function (Content) {\n    Content[\"Data\"] = \"data\";\n    Content[\"Encoding\"] = \"encoding\";\n})(Content || (Content = {}));\n/**\n * The extent of the band. Available options include:\n * - `\"ci\"`: Extend the band to the confidence interval of the mean.\n * - `\"stderr\"`: The size of band are set to the value of standard error, extending from the\n * mean.\n * - `\"stdev\"`: The size of band are set to the value of standard deviation, extending from\n * the mean.\n * - `\"iqr\"`: Extend the band to the q1 and q3.\n *\n * __Default value:__ `\"stderr\"`.\n *\n * The extent of the rule. Available options include:\n * - `\"ci\"`: Extend the rule to the confidence interval of the mean.\n * - `\"stderr\"`: The size of rule are set to the value of standard error, extending from the\n * mean.\n * - `\"stdev\"`: The size of rule are set to the value of standard deviation, extending from\n * the mean.\n * - `\"iqr\"`: Extend the rule to the q1 and q3.\n *\n * __Default value:__ `\"stderr\"`.\n */\nexport var ExtentExtent;\n(function (ExtentExtent) {\n    ExtentExtent[\"Ci\"] = \"ci\";\n    ExtentExtent[\"Iqr\"] = \"iqr\";\n    ExtentExtent[\"MinMax\"] = \"min-max\";\n    ExtentExtent[\"Stderr\"] = \"stderr\";\n    ExtentExtent[\"Stdev\"] = \"stdev\";\n})(ExtentExtent || (ExtentExtent = {}));\nexport var PointEnum;\n(function (PointEnum) {\n    PointEnum[\"Transparent\"] = \"transparent\";\n})(PointEnum || (PointEnum = {}));\n/**\n * The mark type. This could a primitive mark type\n * (one of `\"bar\"`, `\"circle\"`, `\"square\"`, `\"tick\"`, `\"line\"`,\n * `\"area\"`, `\"point\"`, `\"geoshape\"`, `\"rule\"`, and `\"text\"`)\n * or a composite mark type (`\"boxplot\"`, `\"errorband\"`, `\"errorbar\"`).\n *\n * All types of primitive marks.\n */\nexport var Mark;\n(function (Mark) {\n    Mark[\"Area\"] = \"area\";\n    Mark[\"Bar\"] = \"bar\";\n    Mark[\"Boxplot\"] = \"boxplot\";\n    Mark[\"Circle\"] = \"circle\";\n    Mark[\"Errorband\"] = \"errorband\";\n    Mark[\"Errorbar\"] = \"errorbar\";\n    Mark[\"Geoshape\"] = \"geoshape\";\n    Mark[\"Line\"] = \"line\";\n    Mark[\"Point\"] = \"point\";\n    Mark[\"Rect\"] = \"rect\";\n    Mark[\"Rule\"] = \"rule\";\n    Mark[\"Square\"] = \"square\";\n    Mark[\"Text\"] = \"text\";\n    Mark[\"Tick\"] = \"tick\";\n    Mark[\"Trail\"] = \"trail\";\n})(Mark || (Mark = {}));\n/**\n * The cartographic projection to use. This value is case-insensitive, for example\n * `\"albers\"` and `\"Albers\"` indicate the same projection type. You can find all valid\n * projection types [in the\n * documentation](https://vega.github.io/vega-lite/docs/projection.html#projection-types).\n *\n * __Default value:__ `mercator`\n */\nexport var ProjectionType;\n(function (ProjectionType) {\n    ProjectionType[\"Albers\"] = \"albers\";\n    ProjectionType[\"AlbersUsa\"] = \"albersUsa\";\n    ProjectionType[\"AzimuthalEqualArea\"] = \"azimuthalEqualArea\";\n    ProjectionType[\"AzimuthalEquidistant\"] = \"azimuthalEquidistant\";\n    ProjectionType[\"ConicConformal\"] = \"conicConformal\";\n    ProjectionType[\"ConicEqualArea\"] = \"conicEqualArea\";\n    ProjectionType[\"ConicEquidistant\"] = \"conicEquidistant\";\n    ProjectionType[\"Equirectangular\"] = \"equirectangular\";\n    ProjectionType[\"Gnomonic\"] = \"gnomonic\";\n    ProjectionType[\"Identity\"] = \"identity\";\n    ProjectionType[\"Mercator\"] = \"mercator\";\n    ProjectionType[\"Orthographic\"] = \"orthographic\";\n    ProjectionType[\"Stereographic\"] = \"stereographic\";\n    ProjectionType[\"TransverseMercator\"] = \"transverseMercator\";\n})(ProjectionType || (ProjectionType = {}));\nexport var ResolveMode;\n(function (ResolveMode) {\n    ResolveMode[\"Independent\"] = \"independent\";\n    ResolveMode[\"Shared\"] = \"shared\";\n})(ResolveMode || (ResolveMode = {}));\n/**\n * Establishes a two-way binding between the interval selection and the scales\n * used within the same view. This allows a user to interactively pan and\n * zoom the view.\n */\nexport var BindEnum;\n(function (BindEnum) {\n    BindEnum[\"Scales\"] = \"scales\";\n})(BindEnum || (BindEnum = {}));\n/**\n * By default, `all` data values are considered to lie within an empty selection.\n * When set to `none`, empty selections contain no data values.\n */\nexport var Empty;\n(function (Empty) {\n    Empty[\"All\"] = \"all\";\n    Empty[\"None\"] = \"none\";\n})(Empty || (Empty = {}));\n/**\n * With layered and multi-view displays, a strategy that determines how\n * selections' data queries are resolved when applied in a filter transform,\n * conditional encoding rule, or scale domain.\n */\nexport var SelectionResolution;\n(function (SelectionResolution) {\n    SelectionResolution[\"Global\"] = \"global\";\n    SelectionResolution[\"Intersect\"] = \"intersect\";\n    SelectionResolution[\"Union\"] = \"union\";\n})(SelectionResolution || (SelectionResolution = {}));\nexport var SelectionDefType;\n(function (SelectionDefType) {\n    SelectionDefType[\"Interval\"] = \"interval\";\n    SelectionDefType[\"Multi\"] = \"multi\";\n    SelectionDefType[\"Single\"] = \"single\";\n})(SelectionDefType || (SelectionDefType = {}));\n/**\n * The reference frame for the anchor position, one of `\"bounds\"` (to anchor relative to the\n * full bounding box) or `\"group\"` (to anchor relative to the group width or height).\n */\nexport var TitleFrame;\n(function (TitleFrame) {\n    TitleFrame[\"Bounds\"] = \"bounds\";\n    TitleFrame[\"Group\"] = \"group\";\n})(TitleFrame || (TitleFrame = {}));\n/**\n * Default title orientation (`\"top\"`, `\"bottom\"`, `\"left\"`, or `\"right\"`)\n */\nexport var TitleOrient;\n(function (TitleOrient) {\n    TitleOrient[\"Bottom\"] = \"bottom\";\n    TitleOrient[\"Left\"] = \"left\";\n    TitleOrient[\"None\"] = \"none\";\n    TitleOrient[\"Right\"] = \"right\";\n    TitleOrient[\"Top\"] = \"top\";\n})(TitleOrient || (TitleOrient = {}));\n/**\n * The window or aggregation operation to apply within a window (e.g.,`rank`, `lead`, `sum`,\n * `average` or `count`). See the list of all supported operations\n * [here](https://vega.github.io/vega-lite/docs/window.html#ops).\n *\n * An [aggregate operation](https://vega.github.io/vega-lite/docs/aggregate.html#ops) to\n * perform on the field prior to sorting (e.g., `\"count\"`, `\"mean\"` and `\"median\"`).\n * An aggregation is required when there are multiple values of the sort field for each\n * encoded data field.\n * The input data objects will be aggregated, grouped by the encoded data field.\n *\n * For a full list of operations, please see the documentation for\n * [aggregate](https://vega.github.io/vega-lite/docs/aggregate.html#ops).\n *\n * __Default value:__ `\"sum\"` for stacked plots. Otherwise, `\"mean\"`.\n *\n * The aggregation operation to apply to the fields (e.g., sum, average or count).\n * See the [full list of supported aggregation\n * operations](https://vega.github.io/vega-lite/docs/aggregate.html#ops)\n * for more information.\n *\n * The aggregation operation to apply (e.g., sum, average or count). See the list of all\n * supported operations [here](https://vega.github.io/vega-lite/docs/aggregate.html#ops).\n */\nexport var Op;\n(function (Op) {\n    Op[\"Argmax\"] = \"argmax\";\n    Op[\"Argmin\"] = \"argmin\";\n    Op[\"Average\"] = \"average\";\n    Op[\"Ci0\"] = \"ci0\";\n    Op[\"Ci1\"] = \"ci1\";\n    Op[\"Count\"] = \"count\";\n    Op[\"CumeDist\"] = \"cume_dist\";\n    Op[\"DenseRank\"] = \"dense_rank\";\n    Op[\"Distinct\"] = \"distinct\";\n    Op[\"FirstValue\"] = \"first_value\";\n    Op[\"Lag\"] = \"lag\";\n    Op[\"LastValue\"] = \"last_value\";\n    Op[\"Lead\"] = \"lead\";\n    Op[\"Max\"] = \"max\";\n    Op[\"Mean\"] = \"mean\";\n    Op[\"Median\"] = \"median\";\n    Op[\"Min\"] = \"min\";\n    Op[\"Missing\"] = \"missing\";\n    Op[\"NthValue\"] = \"nth_value\";\n    Op[\"Ntile\"] = \"ntile\";\n    Op[\"PercentRank\"] = \"percent_rank\";\n    Op[\"Q1\"] = \"q1\";\n    Op[\"Q3\"] = \"q3\";\n    Op[\"Rank\"] = \"rank\";\n    Op[\"RowNumber\"] = \"row_number\";\n    Op[\"Stderr\"] = \"stderr\";\n    Op[\"Stdev\"] = \"stdev\";\n    Op[\"Stdevp\"] = \"stdevp\";\n    Op[\"Sum\"] = \"sum\";\n    Op[\"Valid\"] = \"valid\";\n    Op[\"Values\"] = \"values\";\n    Op[\"Variance\"] = \"variance\";\n    Op[\"Variancep\"] = \"variancep\";\n})(Op || (Op = {}));\nexport var ExtentEnum;\n(function (ExtentEnum) {\n    ExtentEnum[\"MinMax\"] = \"min-max\";\n})(ExtentEnum || (ExtentEnum = {}));\n/**\n * The extent of the band. Available options include:\n * - `\"ci\"`: Extend the band to the confidence interval of the mean.\n * - `\"stderr\"`: The size of band are set to the value of standard error, extending from the\n * mean.\n * - `\"stdev\"`: The size of band are set to the value of standard deviation, extending from\n * the mean.\n * - `\"iqr\"`: Extend the band to the q1 and q3.\n *\n * __Default value:__ `\"stderr\"`.\n *\n * The extent of the rule. Available options include:\n * - `\"ci\"`: Extend the rule to the confidence interval of the mean.\n * - `\"stderr\"`: The size of rule are set to the value of standard error, extending from the\n * mean.\n * - `\"stdev\"`: The size of rule are set to the value of standard deviation, extending from\n * the mean.\n * - `\"iqr\"`: Extend the rule to the q1 and q3.\n *\n * __Default value:__ `\"stderr\"`.\n */\nexport var ErrorbandExtent;\n(function (ErrorbandExtent) {\n    ErrorbandExtent[\"Ci\"] = \"ci\";\n    ErrorbandExtent[\"Iqr\"] = \"iqr\";\n    ErrorbandExtent[\"Stderr\"] = \"stderr\";\n    ErrorbandExtent[\"Stdev\"] = \"stdev\";\n})(ErrorbandExtent || (ErrorbandExtent = {}));\n/**\n * Defines how Vega-Lite generates title for fields.  There are three possible styles:\n * - `\"verbal\"` (Default) - displays function in a verbal style (e.g., \"Sum of field\",\n * \"Year-month of date\", \"field (binned)\").\n * - `\"function\"` - displays function using parentheses and capitalized texts (e.g.,\n * \"SUM(field)\", \"YEARMONTH(date)\", \"BIN(field)\").\n * - `\"plain\"` - displays only the field name without functions (e.g., \"field\", \"date\",\n * \"field\").\n */\nexport var FieldTitle;\n(function (FieldTitle) {\n    FieldTitle[\"Functional\"] = \"functional\";\n    FieldTitle[\"Plain\"] = \"plain\";\n    FieldTitle[\"Verbal\"] = \"verbal\";\n})(FieldTitle || (FieldTitle = {}));\nexport var InvalidValues;\n(function (InvalidValues) {\n    InvalidValues[\"Filter\"] = \"filter\";\n})(InvalidValues || (InvalidValues = {}));\n","import { TranslateEncoding } from './Encoding';\nimport { Mark } from './vlSpec';\n/**\n * This function used to translate the LayerSpec\n * @param layer\n * The layer in ggSpec\n * @param ggSpec\n */\nexport function TranslateLayer(layer, labels, data, scales) {\n    var layerData = data[layer['data']];\n    var layerspec = {\n        data: {\n            name: layer['data']\n        },\n        mark: TranslateMark(layer['geom']),\n        encoding: TranslateEncoding(layer, labels, layerData, scales)\n    };\n    return layerspec;\n}\nexport function TranslateMark(geom) {\n    var mark;\n    if (geom['class'] == 'GeomPoint') {\n        mark = Mark.Point;\n    }\n    else {\n        mark = undefined;\n    }\n    return mark;\n}\n","import { TranslateLayer } from './LayerSpec';\nexport function gg2vl(ggSpec) {\n    var vl = {\n        $schema: 'https://vega.github.io/schema/vega-lite/v3.json',\n        title: TranslateTitle(ggSpec['labels']),\n        datasets: TranslateDatasets(ggSpec['data']),\n        layer: TranslateLayers(ggSpec['layers'], ggSpec['labels'], ggSpec['data'], ggSpec['scales'])\n    };\n    return vl;\n}\nfunction TranslateTitle(ggLables) {\n    if (!ggLables)\n        return undefined;\n    if (ggLables['title'])\n        return ggLables['title'];\n}\nfunction TranslateDatasets(ggData) {\n    if (!ggData)\n        return undefined;\n    var n = 0;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    for (var _dataset in ggData) {\n        n++;\n    }\n    if (n == 0)\n        return undefined;\n    else {\n        var datasets = {};\n        for (var dataset in ggData) {\n            datasets[dataset] = ggData[dataset]['observations'];\n        }\n        return datasets;\n    }\n}\nfunction TranslateLayers(ggLayers, ggLables, ggData, ggScales) {\n    if (!ggLayers)\n        return undefined;\n    var n = 0;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    for (var _layer in ggLayers) {\n        n++;\n    }\n    if (n == 0)\n        return undefined;\n    else {\n        var layers = [];\n        for (var _i = 0, ggLayers_1 = ggLayers; _i < ggLayers_1.length; _i++) {\n            var layer = ggLayers_1[_i];\n            layers.push(TranslateLayer(layer, ggLables, ggData, ggScales));\n        }\n        return layers;\n    }\n}\n/**\n * This function remove empty object in the vlSpec\n * @param obj\n *\n */\nexport function removeEmpty(obj) {\n    if (!(obj != null && typeof obj === 'object'))\n        return;\n    Object.keys(obj).forEach(function (key) {\n        if (obj[key] && typeof obj[key] === 'object') {\n            if (Object.keys(obj[key]).length === 0) {\n                delete obj[key];\n                return;\n            }\n            removeEmpty(obj[key]);\n            if (Object.keys(obj[key]).length === 0) {\n                delete obj[key];\n                return;\n            }\n        }\n        else if (obj[key] === null) {\n            delete obj[key];\n            return;\n        }\n    });\n}\n"],"names":["TranslateStroke","TranslateStrokeWidth","TranslateOpacity","TranslateFill","Mark.TranslatePointSize","Mark.TranslatePointShape","Mark.TranslateStroke","Mark.TranslateStrokeWidth","Mark.TranslateOpacity","Mark.TranslateFill"],"mappings":"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"}